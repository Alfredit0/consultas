/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package consultas.views;

import consultas.Database;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Meltsan
 */
public class jobs extends javax.swing.JFrame {
    DefaultTableModel modelo;
    Database d;
    ResultSet rs;
    /**
     * Creates new form departments
     */
    public jobs() throws SQLException {
        initComponents();
        cargarDatos();
    }
public void cargarDatos() throws SQLException{
            modelo= new DefaultTableModel();        
            //modelo.addColumn("Número Adquisición");
            modelo.addColumn("JOB_ID");
            modelo.addColumn("JOB_TITLE");
            modelo.addColumn("MIN_SALARY"); 
            modelo.addColumn("MAX_SALARY"); 
            jTable1.setModel(modelo);  
            
            String []Datos= new String[4];
            
		Database d=new Database();		
                
		System.out.println("Conectando con la base de datos:");
		if(d.conectar()){
			rs=d.ejecutarConsulta("select * from jobs @LINK_A");
                        while(rs.next()) {
				for(int i=1; i<=4; i++) {
					Datos[i-1]=rs.getString(i);
				}
                                modelo.addRow(Datos);
                        }
                }
		else
			System.out.println("No se pudo conectar. Revisa los datos introducidos.");
                
    rs=d.ejecutarConsulta("select department_name from departments@LINK_B");
    
    while(rs.next()){
        jComboDepart.addItem((String) rs.getObject(1));
    }
    
		if(d.desconectar())
			System.out.println("Desconectado tras jecutar la consulta.");
		else
			System.out.println("Por alguna razón no se ha podido desconectar.");            
}
public void cargarDatos(String categoria, String parametro) throws SQLException{
            modelo= new DefaultTableModel();        
            //modelo.addColumn("Número Adquisición");
            modelo.addColumn("JOB_ID");
            modelo.addColumn("JOB_TITLE");
            modelo.addColumn("MIN_SALARY"); 
            modelo.addColumn("MAX_SALARY"); 
            jTable1.setModel(modelo);  
            
            String []Datos= new String[4];
            
		Database d=new Database();
                
		System.out.println("Conectando con la base de datos:");
                String consulta = "select * from jobs@LINK_A where "+categoria+" LIKE '%"+parametro+"%'";
                System.out.println(consulta);
		if(d.conectar()){
			this.rs=d.ejecutarConsulta(consulta);
                        while(rs.next()) {
				for(int i=1; i<=4; i++) {
					Datos[i-1]=rs.getString(i);
				}
                                modelo.addRow(Datos);
                        }
                }
		else
			System.out.println("No se pudo conectar. Revisa los datos introducidos.");
		if(d.desconectar())
			System.out.println("Desconectado tras jecutar la consulta.");
		else
			System.out.println("Por alguna razón no se ha podido desconectar.");            
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnVerTodo = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        jTextFieldParam = new javax.swing.JTextField();
        jComboBoxCat = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jComboDepart = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jButtonMenu = new javax.swing.JButton();
        lbl_fondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Departamentos");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Franklin Gothic Book", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 0, 0));
        jLabel1.setText("EMPLEOS");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, -1, -1));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 270, 900, 290));

        btnVerTodo.setFont(new java.awt.Font("Franklin Gothic Book", 1, 18)); // NOI18N
        btnVerTodo.setForeground(new java.awt.Color(204, 0, 0));
        btnVerTodo.setText("VER TODOS");
        btnVerTodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerTodoActionPerformed(evt);
            }
        });
        getContentPane().add(btnVerTodo, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 110, -1, 30));

        btnBuscar.setFont(new java.awt.Font("Franklin Gothic Book", 1, 18)); // NOI18N
        btnBuscar.setForeground(new java.awt.Color(204, 0, 0));
        btnBuscar.setText("BUSCAR");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        getContentPane().add(btnBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 110, -1, 30));

        jTextFieldParam.setFont(new java.awt.Font("Franklin Gothic Book", 0, 18)); // NOI18N
        jTextFieldParam.setForeground(new java.awt.Color(204, 0, 0));
        getContentPane().add(jTextFieldParam, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 110, 150, 30));

        jComboBoxCat.setFont(new java.awt.Font("Franklin Gothic Book", 1, 18)); // NOI18N
        jComboBoxCat.setForeground(new java.awt.Color(204, 0, 0));
        jComboBoxCat.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECCIONE", "JOB_ID", "JOB_TITLE", "MIN_SALARY ", "MAX_SALARY" }));
        getContentPane().add(jComboBoxCat, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 110, 180, -1));

        jLabel2.setFont(new java.awt.Font("Franklin Gothic Book", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 0, 0));
        jLabel2.setText("DEPARTAMENTO");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 160, -1, 30));

        jButton3.setFont(new java.awt.Font("Franklin Gothic Book", 1, 18)); // NOI18N
        jButton3.setForeground(new java.awt.Color(204, 0, 0));
        jButton3.setLabel("ID Y NOMBRE DE DEPARTAMENTO");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 210, -1, -1));

        jButton2.setFont(new java.awt.Font("Franklin Gothic Book", 1, 18)); // NOI18N
        jButton2.setForeground(new java.awt.Color(204, 0, 0));
        jButton2.setLabel("ID Y NOMBRE DE LOS EMPLEADOS");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 210, -1, -1));

        jButton1.setFont(new java.awt.Font("Franklin Gothic Book", 1, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(204, 0, 0));
        jButton1.setLabel("ID Y EMPLEO");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 210, -1, -1));

        jComboDepart.setFont(new java.awt.Font("Franklin Gothic Book", 1, 18)); // NOI18N
        jComboDepart.setForeground(new java.awt.Color(204, 0, 0));
        jComboDepart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboDepartActionPerformed(evt);
            }
        });
        getContentPane().add(jComboDepart, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 160, 200, 30));

        jLabel3.setFont(new java.awt.Font("Franklin Gothic Book", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(204, 0, 0));
        jLabel3.setText("BUSCAR POR");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 110, -1, 30));

        jButtonMenu.setFont(new java.awt.Font("Franklin Gothic Book", 1, 18)); // NOI18N
        jButtonMenu.setForeground(new java.awt.Color(204, 0, 0));
        jButtonMenu.setText("Menu");
        jButtonMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMenuActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonMenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 580, 180, -1));

        lbl_fondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/consultas/views/fondo1.jpg"))); // NOI18N
        getContentPane().add(lbl_fondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 960, 620));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnVerTodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerTodoActionPerformed
        try {
            cargarDatos();
        } catch (SQLException ex) {
            Logger.getLogger(countries.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnVerTodoActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        String categoria = (String) jComboBoxCat.getSelectedItem();
        String parametro = jTextFieldParam.getText();
        System.out.println(categoria);
        if(!categoria.equals("SELECCIONE")){
            if(!"".equals(jTextFieldParam.getText())){
                try {
                    cargarDatos(categoria, parametro);
                } catch (SQLException ex) {
                    Logger.getLogger(countries.class.getName()).log(Level.SEVERE, null, ex);
                }
            }else{
                JOptionPane.showMessageDialog(rootPane, "Por favor escribe un parametro de busqueda");
            }
        }else{
            JOptionPane.showMessageDialog(rootPane, "Por favor seleccione una categoria");
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        Database d=new Database();
        System.out.println("Conectando con la base de datos:");
        System.out.println("select DEPARTMENT_ID,DEPARTMENT_NAME  from departments@LINK_B where '"+jComboDepart.getSelectedItem()+"' =departments.department_name");
        if(d.conectar())
        try {
            rs=d.ejecutarConsulta("select DEPARTMENT_ID,DEPARTMENT_NAME  from departments@LINK_B where '"+jComboDepart.getSelectedItem()+"' =departments.department_name");
        } catch (SQLException ex) {
            Logger.getLogger(jobs.class.getName()).log(Level.SEVERE, null, ex);
        }
        else
        System.out.println("No se pudo conectar. Revisa los datos introducidos.");

        String [] titulos ={"Id","Nombre de departamento"};

        modelo=new DefaultTableModel(null, titulos);

        String fila []= new String [2];

        try {
            while(rs.next()){
                fila [0]=rs.getString("DEPARTMENT_ID");
                fila [1]=rs.getString("DEPARTMENT_NAME");

                modelo.addRow(fila);

            }
        } catch (SQLException ex) {
            Logger.getLogger(jobs.class.getName()).log(Level.SEVERE, null, ex);
        }
        jTable1.setModel(modelo);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        Database d=new Database();
        System.out.println("Conectando con la base de datos:");
        System.out.println("select employees.employee_id,employees.first_name  from employees@LINK_B,departments@LINK_B where  employees.department_id= departments.department_id and '"+jComboDepart.getSelectedItem()+"' =departments.department_name");
        if(d.conectar())
        try {
            rs=d.ejecutarConsulta("select employees.employee_id,employees.first_name  from employees@LINK_B,departments@LINK_B where  employees.department_id= departments.department_id and '"+jComboDepart.getSelectedItem()+"' =departments.department_name");
        } catch (SQLException ex) {
            Logger.getLogger(jobs.class.getName()).log(Level.SEVERE, null, ex);
        }
        else
        System.out.println("No se pudo conectar. Revisa los datos introducidos.");

        String [] titulos ={"Id","Nombre de empleado"};

        modelo=new DefaultTableModel(null, titulos);

        String fila []= new String [2];

        try {
            while(rs.next()){
                fila [0]=rs.getString("EMPLOYEE_ID");
                fila [1]=rs.getString("first_name");

                modelo.addRow(fila);

            }
        } catch (SQLException ex) {
            Logger.getLogger(jobs.class.getName()).log(Level.SEVERE, null, ex);
        }
        jTable1.setModel(modelo);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        //String [] parametros ={"JOB_ID","JOB_TITLE"};
        Database d=new Database();
        System.out.println("Conectando con la base de datos:");
        System.out.println("select jobs.JOB_ID, jobs.JOB_TITLE from jobs@LINK_A,employees@LINK_B,departments@LINK_B where jobs.job_id=employees.job_id and employees.department_id= departments.department_id and '"+jComboDepart.getSelectedItem()+"' =departments.department_name");
        if(d.conectar())
        try {
            rs=d.ejecutarConsulta("select jobs.JOB_ID, jobs.JOB_TITLE from jobs@LINK_A,employees@LINK_B,departments@LINK_B where jobs.job_id=employees.job_id and employees.department_id= departments.department_id and '"+jComboDepart.getSelectedItem()+"' =departments.department_name");
        } catch (SQLException ex) {
            Logger.getLogger(jobs.class.getName()).log(Level.SEVERE, null, ex);
        }
        else
        System.out.println("No se pudo conectar. Revisa los datos introducidos.");

        String [] titulos ={"Id","Titulo de empleo"};

        modelo=new DefaultTableModel(null, titulos);

        String fila []= new String [2];

        try {
            while(rs.next()){
                fila [0]=rs.getString("JOB_ID");
                fila [1]=rs.getString("JOB_TITLE");

                modelo.addRow(fila);

            }
        } catch (SQLException ex) {
            Logger.getLogger(jobs.class.getName()).log(Level.SEVERE, null, ex);
        }
        jTable1.setModel(modelo);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jComboDepartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboDepartActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboDepartActionPerformed

    private void jButtonMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMenuActionPerformed
        main f = null;
        f = new main();
        f.setVisible (true);
        dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonMenuActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jobs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jobs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jobs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jobs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new jobs().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(jobs.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnVerTodo;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButtonMenu;
    private javax.swing.JComboBox<String> jComboBoxCat;
    private javax.swing.JComboBox<String> jComboDepart;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextFieldParam;
    private javax.swing.JLabel lbl_fondo;
    // End of variables declaration//GEN-END:variables
}
